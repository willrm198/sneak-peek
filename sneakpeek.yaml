openapi: 3.0.0
info: 
  title: Sneak Peek
  description: Sneak Peek online closet application
  version: 0.1.9
  
servers:
  - url: http://localhost:8080
    description: local endpoint
tags:
  - name: "user"
    description: "Access users"
  - name: "closet"
    description: "Access users closet"

  
paths: 
  /createUser:
    post:
      tags:
      - "user"
      summary: create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/User'
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: string
                example: User Created!
  /User:
    get:
      tags:
      - "user"
      summary: returns list of all users
      parameters: 
        - in: query
          name: sortField
          schema:
            type: string 
            default: username
            enum: 
             - username
             - fname
             - lname
          description: The field to sort list of users by
        - in: query
          name: sortDir
          schema:
           type: string
           default: asc
           enum: 
            - asc
            - desc
      responses: 
        '200':
          description: OK. Returns a response object containing a message and list of users
          content:
           application/json:
              schema: 
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
      - "user"
      summary: update user
      requestBody:
        required: true
        content: 
          application/json: 
            schema: 
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /User/{username}:
    get:
      tags:
      - "user"
      summary: returns user by username
      parameters: 
        - in: path
          name: username
          required: true
          description: username of user to search
          schema:
            type: string
      responses:
        '200':
          description: OK. Returns a response object containing a message and the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags:
      - "user"
      summary: delete user
      parameters: 
        - in: path
          name: username
          required: true
          description: username of user to delete
          schema:
            type: string
      responses:
        '200': 
          description: User Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'          
  /Closet:
    post:
      tags:
      - "closet"
      summary: adds item to user closet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosetRequest'
      responses:
        '200': 
          description: item added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosetResponse'
  /Closet/{username}:
    get:
      tags:
      - "closet"
      summary: get users closet of only visible items
      parameters: 
        - in: path
          name: username
          required: true
          description: username of user closet to view
          schema:
            type: string
      responses:
        '200':
          description: List of users items (closet)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosetResponse'
              
components:
  schemas:
    ClosetItem:
      properties: 
        itemSize: 
          type: integer
          example: 11.5
        itemBrand:
          type: string
          example: Nike
        itemModel:
          type: string
          example: Uptempo
        itemDescription:
          type: string
          example: Nike basketball shoe
        itemIsVisible:
          type: boolean
          example: true
   
    ClosetRequest:
      properties:
        username:
          type: string
          example: JDrew81
        ClosetItem:
            $ref: '#/components/schemas/ClosetItem'
      
    ClosetResponse:
      properties:
        message:
          type: string
        closet:
          type: array
          items:
            $ref: '#/components/schemas/ClosetItem'
          
    User:
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
   
    UserResponse:
      properties:
         message:
          type: string
          example: Many users found!
         users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        
    